{"version":3,"sources":["actions/boards.js","components/Boards/Boards.js","components/AddBoard/AddBoard.js","components/BoardsSidebar/BoardsSidebar.js","components/BoardHeader/BoardHeader.js","components/AddCard/AddCard.js","actions/cards.js","components/Card/Card.js","components/Cards/Cards.js","components/List/List.js","actions/lists.js","components/AddList/AddList.js","components/Lists/Lists.js","components/BoardContent/BoardContent.js","components/Board/Board.js","pages/HomePage/HomePage.js","serviceWorker.js","reducers/boards.js","reducers/lists.js","reducers/cards.js","reducers/index.js","store/store.js","index.js","App.js","assets/board-error.gif"],"names":["removeBoard","board","type","payload","changeTheme","theme","connect","state","dispatch","props","boards","boardsArr","Object","values","className","map","idx","to","pathname","id","key","onClick","icon","faTrashAlt","topicBoard","titleBoard","addBoard","useState","isModalActive","setIsModalActive","inputTitleBoard","setInputTitleBoard","inputTopicBoard","setInputTopicBoard","ReactDOM","createPortal","faTimes","placeholder","onChange","e","target","value","document","getElementById","BoardsSidebar","width","height","viewBox","fill","xmlns","d","x1","y1","x2","y2","gradientUnits","stopColor","offset","body","clientWidth","setBurgerIsOpen","faChevronLeft","name","event","checked","addCard","card","cardPriority","setCardPriority","idList","idBoard","textCard","setTextCard","doneCard","idCard","uuid","removeCard","editCard","index","editedText","setEditedText","editedPriority","setEditedPriority","isEditOpened","setIsEditOpened","cardEdit","editedTextHeight","setEditedTextHeight","cardTextEl","useRef","useEffect","current","clientHeight","draggableId","String","provided","onDoubleClick","ref","innerRef","dragHandleProps","draggableProps","toLowerCase","style","faEdit","cardsKeys","isAddMenuOpened","cards","droppableId","droppableProps","cardKey","removeList","list","editList","titleList","setIsAddMenuOpened","editedTitleList","setEditedTitleList","listEdit","editedTitleListHeight","setEditedTitleListHeight","listTitleEl","listProgress","doneCards","forEach","length","faCheck","faPlusCircle","addList","isAddListOpened","setIsAddListOpened","setTitleList","listsKeys","lists","direction","listKey","dragEvent","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","onDragEnd","result","destination","source","draggabledId","location","path","split","burgerIsOpen","classList","remove","add","faChevronRight","src","boardError","alt","console","log","Boolean","window","hostname","match","initialState","status","combineReducers","action","newLists","idLists","idxIdList","indexOf","splice","pulledOutList","newCards","idListForCards","idxIdCard","listStart","listEnd","listCards","listCard","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","render","loading","exact","component","HomePage","Board","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0c954d06.chunk.js","sourcesContent":["const ADD_BOARD = \"ADD_BOARD\"\nconst REMOVE_BOARD = \"REMOVE_BOARD\"\nconst CHANGE_THEME = \"CHANGE_THEME\"\n\nexport const addBoard  = board => ({\n    type: ADD_BOARD,    \n    payload: board\n})\nexport const removeBoard  = board => ({\n    type: REMOVE_BOARD,    \n    payload: board\n})\n\nexport const changeTheme  = theme => ({\n    type: CHANGE_THEME,    \n    payload: theme\n})\n","import React from \"react\";\nimport './Boards.sass';\nimport { BrowserRouter as Router, Link} from \"react-router-dom\";\nimport {removeBoard} from '../../actions/boards';\nimport {connect} from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\n\nconst Boards = (props) => {\n    const {boards} = props.boards\n    const boardsArr = []&&boards && Object.values(boards)\n    \n\n        return (\n            <div className=\"boards\">\n                <div className=\"boards__list\">\n                    {boardsArr.map((board,idx)=>{\n                        return (\n                            <Link \n                                to={{\n                                    pathname: `/itask/boards/${board.id}`,\n                                    board,\n                                }} key={idx}\n                                className=\"board__list-link\">\n                                <div className=\"boards__item \" key={idx}>\n                                    <button className=\"board__btn board__btn-remove btn-remove btn\" onClick={()=> props.removeBoard(board.id)}>\n                                        <FontAwesomeIcon icon={faTrashAlt} />\n                                    </button>\n                                    <div className=\"topic-boards_mini\">\n                                        <p>{board.topicBoard}</p>\n                                    </div>\n                                    <div className=\"title-boards_mini\">\n                                        <p>{board.titleBoard}</p>\n                                    </div>\n                                </div>\n                            </Link> \n                        )\n                    })}\n                </div>\n            </div>\n        );\n}\n\nconst mapStateToProps = (state) =>({\n    ...state\n})\nconst mapDispatchToProps = dispatch =>({\n    removeBoard: board => dispatch(removeBoard(board)),\n})\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Boards)","import React,{useState} from \"react\";\nimport ReactDOM from 'react-dom';\nimport './AddBoard.sass';\nimport {addBoard} from '../../actions/boards';\nimport {connect} from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nconst AddBoard = (props) => {\n\n        const [isModalActive,setIsModalActive]=useState(false)\n        const [inputTitleBoard,setInputTitleBoard] = useState(\"\")\n        const [inputTopicBoard,setInputTopicBoard] = useState(\"\")\n        const board ={\n            titleBoard: inputTitleBoard,\n            topicBoard: inputTopicBoard,\n        }\n\n        return (\n            <div className=\"add-board\">\n                <button className=\"add-board__btn-add add-board__btn-open\" onClick={()=> setIsModalActive(true)}>\n                    +\n                </button>\n                {\n                    isModalActive && \n                    ReactDOM.createPortal(\n                        <div className=\"modal\">\n                            <div className={`add-board__modal window-modal`}>\n                                <button className=\"modal__btn-close btn-close\" onClick={()=> setIsModalActive(false)}>\n                                    <FontAwesomeIcon icon={faTimes} />\n                                </button>  \n                                <input className=\"add-board__title-board\" placeholder=\"Введите название доски\" onChange={(e)=>{setInputTitleBoard(e.target.value)}}>\n\n                                </input>\n                                <input className=\"add-board__topic-board\" placeholder=\"Введите тему \" onChange={(e)=>{setInputTopicBoard(e.target.value)}}>\n\n                                </input>\n                                <button className=\"add-board__btn-save btn-save\" onClick={()=>{\n                                    props.addBoard(board)\n\n                                    inputTitleBoard&&inputTopicBoard&&setIsModalActive(false)\n                                    }}>\n                                    Добавить \n                                </button>\n                                \n\n                            </div>\n                        </div>\n                        ,\n                        document.getElementById(\"window-overlay\")\n                    )\n                }\n                \n            </div>\n        );\n}\n\nconst mapStateToProps = (state) =>({\n    ...state\n})\nconst mapDispatchToProps = dispatch =>({\n    addBoard: board => dispatch(addBoard(board)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddBoard)","import React from \"react\";\nimport './BoardsSidebar.sass';\nimport Boards from '../Boards/Boards';\nimport AddBoard from '../AddBoard/AddBoard';\nimport { BrowserRouter as Router, Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nconst BoardsSidebar = (props) => {\n\n    return (\n        <div className=\"boards-sidebar\">\n            <div className=\"logo\">\n                <Link to={{pathname: `/itask/`}} >\n                    <svg width=\"86\" height=\"42\" viewBox=\"0 0 86 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M70.1934 27.6471L72.3203 29.6862L79 29.6862L79 32.9382L52 32.9382L52 29.6862L68.3301 29.6862L66.2383 27.946L59.9805 22.0221L59.9805 18.0671L67.9258 25.4675L79 17.2057L79 21.0202L70.1934 27.6471Z\" fill=\"url(#paint0_linear)\"/>\n                    <path d=\"M20.6543 10.1836H12.4277V33H9.07031V10.1836H0.861328V7.40625H20.6543V10.1836ZM33.6797 33C33.4922 32.625 33.3398 31.957 33.2227 30.9961C31.7109 32.5664 29.9062 33.3516 27.8086 33.3516C25.9336 33.3516 24.3926 32.8242 23.1855 31.7695C21.9902 30.7031 21.3926 29.3555 21.3926 27.7266C21.3926 25.7461 22.1426 24.2109 23.6426 23.1211C25.1543 22.0195 27.2754 21.4688 30.0059 21.4688H33.1699V19.9746C33.1699 18.8379 32.8301 17.9355 32.1504 17.2676C31.4707 16.5879 30.4688 16.248 29.1445 16.248C27.9844 16.248 27.0117 16.541 26.2266 17.127C25.4414 17.7129 25.0488 18.4219 25.0488 19.2539H21.7793C21.7793 18.3047 22.1133 17.3906 22.7812 16.5117C23.4609 15.6211 24.375 14.918 25.5234 14.4023C26.6836 13.8867 27.9551 13.6289 29.3379 13.6289C31.5293 13.6289 33.2461 14.1797 34.4883 15.2812C35.7305 16.3711 36.375 17.877 36.4219 19.7988V28.5527C36.4219 30.2988 36.6445 31.6875 37.0898 32.7188V33H33.6797ZM28.2832 30.5215C29.3027 30.5215 30.2695 30.2578 31.1836 29.7305C32.0977 29.2031 32.7598 28.5176 33.1699 27.6738V23.7715H30.6211C26.6367 23.7715 24.6445 24.9375 24.6445 27.2695C24.6445 28.2891 24.9844 29.0859 25.6641 29.6602C26.3438 30.2344 27.2168 30.5215 28.2832 30.5215ZM52.5938 27.9551C52.5938 27.0762 52.2598 26.3965 51.5918 25.916C50.9355 25.4238 49.7812 25.002 48.1289 24.6504C46.4883 24.2988 45.1816 23.877 44.209 23.3848C43.248 22.8926 42.5332 22.3066 42.0645 21.627C41.6074 20.9473 41.3789 20.1387 41.3789 19.2012C41.3789 17.6426 42.0352 16.3242 43.3477 15.2461C44.6719 14.168 46.3594 13.6289 48.4102 13.6289C50.5664 13.6289 52.3125 14.1855 53.6484 15.2988C54.9961 16.4121 55.6699 17.8359 55.6699 19.5703H52.4004C52.4004 18.6797 52.0195 17.9121 51.2578 17.2676C50.5078 16.623 49.5586 16.3008 48.4102 16.3008C47.2266 16.3008 46.3008 16.5586 45.6328 17.0742C44.9648 17.5898 44.6309 18.2637 44.6309 19.0957C44.6309 19.8809 44.9414 20.4727 45.5625 20.8711C46.1836 21.2695 47.3027 21.6504 48.9199 22.0137C50.5488 22.377 51.8672 22.8105 52.875 23.3145C53.8828 23.8184 54.627 24.4277 55.1074 25.1426C55.5996 25.8457 55.8457 26.707 55.8457 27.7266C55.8457 29.4258 55.166 30.791 53.8066 31.8223C52.4473 32.8418 50.6836 33.3516 48.5156 33.3516C46.9922 33.3516 45.6445 33.082 44.4727 32.543C43.3008 32.0039 42.3809 31.2539 41.7129 30.293C41.0566 29.3203 40.7285 28.2715 40.7285 27.1465H43.9805C44.0391 28.2363 44.4727 29.1035 45.2812 29.748C46.1016 30.3809 47.1797 30.6973 48.5156 30.6973C49.7461 30.6973 50.7305 30.4512 51.4688 29.959C52.2188 29.4551 52.5938 28.7871 52.5938 27.9551Z\" fill=\"white\"/>\n                    <defs>\n                        <linearGradient id=\"paint0_linear\" x1=\"66.5417\" y1=\"40.375\" x2=\"66.5417\" y2=\"17.7083\" gradientUnits=\"userSpaceOnUse\">\n                            <stop stopColor=\"white\"/>\n                            <stop offset=\"0.435367\" stopColor=\"white\"/>\n                            <stop offset=\"0.536458\" stopColor=\"#00FF47\"/>\n                            <stop offset=\"0.552586\" stopColor=\"#00FF47\"/>\n                            <stop offset=\"1\" stopColor=\"#00FF47\"/>\n                        </linearGradient>\n                    </defs>\n                    </svg>\n                </Link>\n            </div>\n            {document.body.clientWidth<998  && <button className=\"btn-burger btn-close-menu\" onClick={()=>props.setBurgerIsOpen(false)}>\n                <FontAwesomeIcon icon={faChevronLeft} className=\"btn-burger__icon\"/>\n            </button>}\n            <Boards />\n            <AddBoard />\n           \n        </div>\n    );\n}\n\n\n\n\nexport default BoardsSidebar\n\n\n\n","import React from \"react\";\nimport './BoardHeader.sass';\nimport {changeTheme} from '../../actions/boards';\nimport {connect} from 'react-redux';\n\n\nconst BoardHeader = (props) => {\n    const {titleBoard,topicBoard} = props.board;\n    const {theme} = props.boards\n   \n    const handleInputChange =(event)=>{\n        const target = event.target;\n        target.checked ? props.changeTheme('light') : props.changeTheme('dark');\n    }\n\n    return (\n        <div className=\"board-header header\">\n            <div className=\"header__baord-info baord-info\">\n                <p className=\"board-header__title-topic\">\n                    <span className=\"board-header__title\">{titleBoard}</span>  <span className=\"board-header__topic\">{topicBoard}</span>\n                </p>\n                <div className=\"board__colors-info colors-info\">\n                    <div className=\"colors-info__item\">\n                        <div className=\"colors-info__color-line default\">\n\n                        </div>\n                        <p className=\"colors-info__color-description\">\n                            Default\n                        </p>\n                    </div>\n                    <div className=\"colors-info__item\">\n                        <div className=\"colors-info__color-line low\">\n\n                        </div>\n                        <p className=\"colors-info__color-description \">\n                            Low\n                        </p>\n                    </div>\n                    <div className=\"colors-info__item\">\n                        <div className=\"colors-info__color-line medium\">\n\n                        </div>\n                        <p className=\"colors-info__color-description\">\n                            Medium\n                        </p>\n                    </div>\n                    <div className=\"colors-info__item\">\n                        <div className=\"colors-info__color-line high\">\n\n                        </div>\n                        <p className=\"colors-info__color-description\">\n                            High\n                        </p>\n                    </div>\n                </div>\n                <div className=\"header__change-theme change-theme\">\n                    <label className=\"change-theme__switch\">\n                        <input\n                        name=\"isGoing\"\n                        type=\"checkbox\"\n                        onChange={handleInputChange} \n                        checked={theme===\"light\"?true:false}\n                        className=\"change-theme__input\"/>\n                        <span className=\"change-theme__toggle toggle-round\"></span>\n                    </label>\n                </div>\n            </div>\n            \n        </div>\n        \n    );\n}\n\n\nconst mapStateToProps = (state) =>({\n    ...state\n})\nconst mapDispatchToProps = dispatch =>({\n    changeTheme: theme => dispatch(changeTheme(theme)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(BoardHeader)\n\n\n\n\n\n","import React,{useState} from \"react\";\nimport './AddCard.sass';\nimport {uuid} from \"uuidv4\";\nimport {addCard} from '../../actions/cards';\nimport {connect} from 'react-redux';\n\nconst AddCard = (props) => {\n        const [cardPriority,setCardPriority]=useState(\"Default\")\n        const {idList,idBoard} = props\n        const [textCard,setTextCard] = useState(\"\")\n        const card = {\n            textCard,\n            doneCard: false,\n            cardPriority,\n            idList,\n            idBoard,\n            idCard: uuid(),\n        }\n\n\n    return (\n            <div className=\"add-card\">\n                <div className=\"add-card__textarea-wrapper\">\n                    <textarea\n                        className=\"add-card__textarea\"\n                        type=\"text\" \n                        placeholder=\"Ввести заголовок для этой карточки\" \n                        value={textCard}\n                        onChange={(e)=>setTextCard(e.target.value) } \n                    />\n                </div>\n                <div className=\"add-card__priority\">\n                    <p>Выберите важность: </p> \n                    <select className=\"add-card__priority-select\" value={cardPriority} onChange={(e)=> setCardPriority(e.target.value)}>\n                        <option value=\"Default\">Default</option>\n                        <option value=\"Low\">Low</option>\n                        <option value=\"Medium\">Medium</option>\n                        <option value=\"High\">High</option>\n                    </select>\n                </div>\n                \n                <button className=\"add-card__btn add-card__btn-add btn-save\" onClick={()=>{\n                    setTextCard(\"\")\n                    props.addCard(card)\n                    }}>\n                    Добавить карточку\n                </button>\n            </div>\n            \n                \n            \n            \n        \n    );\n}\nconst mapStateToProps = (state) =>({\n    ...state\n})\nconst mapDispatchToProps = dispatch =>({\n    addCard: card => dispatch(addCard(card)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCard)\n\n\n\n\n\n","const ADD_CARD = \"ADD_CARD\"\nconst REMOVE_CARD = \"REMOVE_CARD\"\nconst EDIT_CARD = \"EDIT_CARD\"\nconst DRAG_EVENT = \"DRAG_EVENT\"\nconst DONE_CARD = \"DONE_CARD\"\nexport const addCard  = card => ({\n    type: ADD_CARD,    \n    payload: card\n})\n\nexport const removeCard  = card => ({\n    type: REMOVE_CARD,    \n    payload: card\n})\n\nexport const editCard  = card => ({\n    type: EDIT_CARD,    \n    payload: card\n})\n\nexport const doneCard  = card => ({\n    type: DONE_CARD,    \n    payload: card\n})\nexport const dragEvent  = (\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    draggableId,\n    type,\n    idBoard\n) => ({\n    type: DRAG_EVENT,    \n    payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        draggableId,\n        type,\n        idBoard\n    }\n})\n\n\n\n\n","import React,{useEffect,useState,useRef} from \"react\";\nimport './Card.sass';\nimport {removeCard,editCard,doneCard} from '../../actions/cards'\n\nimport {connect} from 'react-redux'\nimport {Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faTrashAlt, faEdit} from '@fortawesome/free-solid-svg-icons'\nconst Card = (props) => {\n    const {textCard,cardPriority,idCard,doneCard} = props.card\n    const {index} = props\n    const [editedText,setEditedText] = useState(textCard)\n    const [editedPriority,setEditedPriority]=useState(cardPriority)\n    const [isEditOpened,setIsEditOpened] = useState(false)\n    const cardEdit={\n        idCard,\n        editedText,\n        editedPriority,\n    }\n\n    const [editedTextHeight,setEditedTextHeight] = useState(0)\n    const cardTextEl = useRef(null)\n\n    useEffect(()=>{\n        setEditedTextHeight(cardTextEl.current.clientHeight)\n    },[textCard])   \n    \n\n    return (\n        <Draggable draggableId={String(idCard)} index={index} > \n            {provided => (\n                <div className={`cards__card card ${doneCard?\"card_done\":\"\"} ${isEditOpened?\"card_editing\":\"\"}`}\n                    onDoubleClick={()=>{setIsEditOpened(true)}}\n                    ref={provided.innerRef} \n                    {...provided.dragHandleProps} \n                    {...provided.draggableProps}\n                >\n                    <div className={`card__priority ${cardPriority.toLowerCase()}`}>\n                        \n                    </div>\n                    <div className=\"card__text\" ref={cardTextEl}>\n                        <p>{textCard}</p>\n                    </div>\n                    <div className=\"card__done\">\n                        <button className=\"card__btn btn\"\n                        onClick={()=>{\n                            props.doneCard(idCard)\n                        }}>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                    { isEditOpened && \n                    <div className=\"card__edit\">       \n                        <div className=\"card__edit-priority edit-priority\">\n                            <select className=\"edit-piority__priority-select\" value={editedPriority} onChange={(e)=> setEditedPriority(e.target.value)}>\n                                <option value=\"Default\">Default</option>\n                                <option value=\"Low\">Low</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"High\">High</option>\n                            </select>\n                        </div>\n                        <div className=\"card__edit-text edit-text\" style={{height: editedTextHeight + 10}}>\n                            <textarea className=\"edit-text__textarea\"\n                                    type=\"text\" \n                                    value={editedText} \n                                    onChange={(e)=>setEditedText(e.target.value) } \n                            />    \n                        </div>\n                        <div className=\"card__edit-btns\">\n                            <button className=\"edit-text__btn btn-save\" onClick={()=>{\n                                props.editCard(cardEdit)\n                                setIsEditOpened(false)\n                                }}>\n                                Сохранить изменения\n                            </button>\n                            <button className=\"edit-text__btn-close btn-close \" onClick={()=>{setIsEditOpened(false)}}>\n                                <FontAwesomeIcon icon={faTimes} />\n                            </button>\n                        </div>\n                        \n                    </div>\n                    }\n                    <div className=\"card__btns\">\n                        <button className=\"card__btn-edit card__btn btn-edit btn\" onClick={()=>{setIsEditOpened(true)}}>\n                            <FontAwesomeIcon icon={faEdit} />\n                        </button>\n                        <button className=\"card__btn-remove card__btn btn-remove btn\" onClick={()=>props.removeCard(props.card)}>\n                            <FontAwesomeIcon icon={faTrashAlt} />\n                        </button>\n                    </div>\n                </div>\n            )}\n        </Draggable>\n        \n    );\n}\nconst mapStateToProps = (state) =>({\n    ...state\n})\nconst mapDispatchToProps = dispatch =>({\n    removeCard: card => (dispatch(removeCard(card))),\n    editCard: card=> (dispatch(editCard(card))),\n    doneCard: card=>(dispatch(doneCard(card)))\n    \n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Card)\n\n\n\n\n\n","import React from \"react\";\nimport './Cards.sass'\nimport Card from '../Card/Card';\nimport {connect} from 'react-redux';\nimport {Droppable } from 'react-beautiful-dnd';\nconst Cards = (props) => {\n    const {cardsKeys,isAddMenuOpened} = props\n    const {cards} = props.cards\n    const {idList} =props\n\n    return (\n        <Droppable droppableId={String(idList)} type=\"card\">\n            {provided=>(\n                <div \n                    {...provided.droppableProps} \n                    ref={provided.innerRef} \n                    className={`cards ${isAddMenuOpened?\"cards_min\":\"\"}`}\n                >\n                    {cardsKeys.map((cardKey,idx)=>{\n                        const card = cards[cardKey]\n                            return(\n                                <Card card={card} key={cardKey} index={idx}/>\n                            )\n                        })}\n                    {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n    );\n}\nconst mapStateToProps = (state) =>({\n    ...state\n})\n\n\nexport default connect(mapStateToProps)(Cards)\n\n\n\n\n\n","import React,{useEffect,useState,useRef} from \"react\";\nimport './List.sass';\n\nimport AddCard from '../AddCard/AddCard';\nimport Cards from '../Cards/Cards';\n\nimport {connect} from 'react-redux';\nimport {removeList,editList} from '../../actions/lists';\nimport {Draggable } from 'react-beautiful-dnd';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt, faTimes, faCheck, faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nconst List = (props) => {\n    const {titleList,idList,idBoard,cards: cardsKeys} = props.list\n    const {index} = props\n    const {cards} = props.cards\n    \n    const [isAddMenuOpened,setIsAddMenuOpened] = useState(false)\n    const [isEditOpened,setIsEditOpened] = useState(false)\n    const [editedTitleList,setEditedTitleList] = useState(titleList)\n\n    const listEdit = {\n        idList,\n        editedTitleList\n\n    }\n    const [editedTitleListHeight,setEditedTitleListHeight] = useState(0)\n    const listTitleEl = useRef(null)\n    let listProgress = 0;\n    let doneCards = 0;\n\n    useEffect(()=>{\n        setEditedTitleListHeight(listTitleEl.current.clientHeight)\n    },[titleList]) \n    \n    cardsKeys.forEach(card => {\n        if (cards[card].doneCard){\n            doneCards++;\n        }\n    });\n\n    if (cardsKeys.length>=1 && doneCards>=1){\n        listProgress = doneCards/cardsKeys.length*100\n    }\n\n    return (\n        <Draggable draggableId={String(idList)} index={index}>\n            {provided => (\n                <div className=\"list-container\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                >\n                    <div className=\"lists__list list\">\n                        <div className=\"list__progress-bar\" style={{width: listProgress+ '%'}}>\n                            <p className=\"list__progress-num\">{doneCards}/{cardsKeys.length}</p>\n                        </div>\n                        <div className=\"list__header\">\n                            <div \n                                className=\"list__title\" \n                                onClick={()=>setIsEditOpened(true)}\n                                ref={listTitleEl}\n                            >\n                                {titleList} ({cardsKeys.length})\n                            </div>\n                            <div className=\"list__btns\">\n                                <button className=\"list__btn-remove list__btn btn-remove btn\" onClick={()=>props.removeList(props.list)}>\n                                    <FontAwesomeIcon icon={faTrashAlt} />\n                                </button>\n                            </div>\n                        </div>\n                        {\n                            isEditOpened && \n                            <div className=\"list__edit\">\n                                <textarea \n                                    className=\"list__edit-title\" \n                                    style={{height: editedTitleListHeight}}\n                                    value={editedTitleList} \n                                    onChange={(e)=>{setEditedTitleList(e.target.value)}} />\n                                <div className=\"list__edit-btns\">\n                                    <button className=\"list__edit-btn-save btn-save\" onClick={()=>{\n                                        props.editList(listEdit)\n                                        setIsEditOpened(false)\n                                        }}>\n                                        <FontAwesomeIcon icon={faCheck} />\n                                    </button>\n                                    <button className=\"list__edit-btn-close btn-close \" onClick={()=>{setIsEditOpened(false)}}>\n                                        <FontAwesomeIcon icon={faTimes} />\n                                    </button>\n                                </div>\n                            </div>\n                        }\n                        <Cards cardsKeys={cardsKeys} isAddMenuOpened={isAddMenuOpened} idList={idList}/>\n                        \n                        {\n                            !isAddMenuOpened &&\n                                <div className=\"open-add-card\" onClick={()=>setIsAddMenuOpened(true)}>\n                                    <p>  \n                                        Добавить еще карточку <FontAwesomeIcon icon={faPlusCircle} />\n                                    </p> \n                                </div>\n                        }\n                        {\n                        isAddMenuOpened&& \n                            <div className=\"list__add-card\">\n                                    <AddCard idList={idList} idBoard={idBoard}/>\n                                    <div className=\"close-add-card btn-close \" onClick={()=>setIsAddMenuOpened(false)}>\n                                        <FontAwesomeIcon icon={faTimes} />\n                                    </div>\n                            </div>\n                        }\n                    </div> \n                </div>\n            )}\n        </Draggable>\n    );\n}\nconst mapStateToProps = (state) =>({\n    ...state\n})\nconst mapDispatchToProps = dispatch =>({\n    removeList: list => dispatch(removeList(list)),\n    editList: list => dispatch(editList(list)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(List)\n\n\n\n\n\n","const ADD_LIST = \"ADD_LIST\"\nconst REMOVE_LIST = \"REMOVE_LIST\"\nconst EDIT_LIST = \"EDIT_LIST\"\n\n\n\nexport const addList = list => ({\n    type: ADD_LIST,    \n    payload: list\n})\n\nexport const removeList = list => ({\n    type: REMOVE_LIST,    \n    payload: list\n})\n\nexport const editList = list => ({\n    type: EDIT_LIST,    \n    payload: list\n})\n\n\n\n\n\n\n","import React,{useState} from \"react\";\nimport './AddList.sass';\n\nimport {uuid} from \"uuidv4\";\nimport {addList} from '../../actions/lists'\nimport {connect} from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nconst AddList = (props) => {\n\n        const [isAddListOpened,setIsAddListOpened]=useState(false)\n        const [titleList,setTitleList] = useState(\"\")\n        const {idBoard} = props\n        const list = {\n            idBoard,\n            titleList,\n            idList: uuid(),\n            cards : []\n        }\n\n        return (\n            <div className=\"add-list\">\n                {!isAddListOpened && \n                    <div className=\"add-list__btn-add add-list__btn-open\" onClick={()=> setIsAddListOpened(true)}>\n                        Добавить колонку +\n                    </div>\n                }\n                {isAddListOpened&&<div className=\"add-list_opened\">\n                    <input className=\"add-list__title-list\" value={titleList} onChange={(e)=>{setTitleList(e.target.value)}}>\n\n                    </input>\n                    <div className=\"add-list__btns\">\n                        <button className=\"add-list__btn add-list__btn-add btn-save\" onClick={()=>{\n                            setTitleList(\"\")\n                            props.addList(list)\n                            }}>\n                            Добавить колонку\n                        </button>\n                        <button className=\"add-list__btn-close btn-close\" onClick={()=> setIsAddListOpened(false)}>\n                            <FontAwesomeIcon icon={faTimes} />\n                        </button>\n                    </div>\n                </div>}\n            </div>\n        );\n}\n\nconst mapStateToProps = (state) =>({\n    ...state\n})\nconst mapDispatchToProps = dispatch =>({\n    addList: list => dispatch(addList(list)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddList)","import React from \"react\";\nimport './Lists.sass';\nimport List from '../List/List';\nimport AddList from '../AddList/AddList';\nimport {connect} from 'react-redux';\nimport {Droppable } from 'react-beautiful-dnd';\n\n\nconst Lists = (props) => {\n    const {listsKeys,idBoard} = props\n    const {lists} = props.lists\n\n\n    return (\n            <div className=\"lists\">\n                <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n                {provided => (\n                        <div className=\"lists__wrapper\"\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                        >\n                            {listsKeys.map((listKey,idx)=>{\n                                return(\n                                    <List list={lists[listKey]} key={listKey} index={idx}/>\n                                )\n                            })}\n                            {provided.placeholder}\n                            <AddList idBoard={idBoard}/>\n                        </div>\n                    )}\n                </Droppable>\n            </div>\n    );\n}\nconst mapStateToProps = (state) =>({\n    ...state\n})\n\nexport default connect(mapStateToProps)(Lists)\n\n\n\n\n\n","import React from \"react\";\nimport './BoardContent.sass';\nimport Lists from '../Lists/Lists';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport {dragEvent} from '../../actions/cards';\nimport {connect} from 'react-redux';\nconst BoardContent = (props) => {\n    const {id: idBoard ,lists: listsKeys} = props.board\n\n    const onDragEnd = (result) => {\n        const {destination, source,draggabledId,type} = result;\n\n        if(!destination) return;\n\n        props.dragEvent(\n            source.droppableId,\n            destination.droppableId,\n            source.index,\n            destination.index,\n            draggabledId,\n            type,\n            idBoard,\n        )\n\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"board-content\">\n                <Lists listsKeys={listsKeys} idBoard={idBoard}/>\n            </div>     \n        </DragDropContext>       \n    );\n}\n\nconst mapStateToProps = (state) =>({\n    ...state\n})\nconst mapDispatchToProps = dispatch =>({\n    dragEvent: (\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        draggableId,\n        type,\n        idBoard\n        ) => dispatch(dragEvent(\n            droppableIdStart,\n            droppableIdEnd,\n            droppableIndexStart,\n            droppableIndexEnd,\n            draggableId,\n            type,\n            idBoard\n        )),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(BoardContent)\n\n\n\n\n\n\n   ","import React,{useState,useEffect} from \"react\";\nimport './Board.sass';\nimport BoardsSidebar from '../BoardsSidebar/BoardsSidebar';\nimport BoardHeader from '../BoardHeader/BoardHeader';\nimport BoardContent from '../BoardContent/BoardContent';\nimport {connect} from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport boardError from '../../assets/board-error.gif';\n\nconst Board = (props) => {\n    \n    const {pathname} = props.location\n    const {boards} = props.boards\n    const path = pathname.split('/')\n    const id = path[path.length-1]\n    const board = boards[id]\n    const [burgerIsOpen, setBurgerIsOpen] = useState(true)\n    const {theme} = props.boards\n    useEffect(() => {\n        document.body.clientWidth<998 && setBurgerIsOpen(false)\n    }, [])\n    if (theme===\"dark\"){\n        document.body.classList.remove('light')\n        document.body.classList.add('dark')\n    } else if(theme===\"light\"){\n        document.body.classList.remove('dark')\n        document.body.classList.add('light')\n    } \n\n    if (!board){\n        return(\n            <div className=\"main-page\">\n                {!burgerIsOpen && document.body.clientWidth<998  && <button className=\"btn-burger btn-open-menu\" onClick={()=>setBurgerIsOpen(true) }>\n                    <FontAwesomeIcon icon={faChevronRight} className=\"btn-burger__icon\"/>\n                </button>}\n                {burgerIsOpen&&<BoardsSidebar setBurgerIsOpen={()=>setBurgerIsOpen()}/>}\n                <div className=\"board-deleted\">\n                    <p className=\"board-deleted__text\">Данная доска была удалена, перейдите на другую доску!</p>\n                    <img className=\"board-deleted__img\"  src={boardError} alt=\"\"/>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className=\"main-page\">\n               {!burgerIsOpen && document.body.clientWidth<998  && <button className=\"btn-burger btn-open-menu\" onClick={()=>setBurgerIsOpen(true) }>\n                    <FontAwesomeIcon icon={faChevronRight} className=\"btn-burger__icon\"/>\n                </button>\n               }\n                {burgerIsOpen&&<BoardsSidebar setBurgerIsOpen={()=>setBurgerIsOpen()}/>}\n                <BoardHeader board={board}/>\n                <BoardContent board={board} />    \n        </div>\n    );\n}\n\nconst mapStateToProps = (state) =>({\n    ...state\n})\n\nexport default connect(mapStateToProps)(Board)\n\n\n\n","import React from \"react\";\nimport '../../styles/style.sass';\nimport './HomePage.sass'\nimport AddBoard from '../../components/AddBoard/AddBoard'\nimport {changeTheme,removeBoard} from '../../actions/boards'\nimport {connect} from 'react-redux'\nimport { BrowserRouter as Router, Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nconst HomePage = (props) => {\n    const {boards} = props.boards\n    const boardsArr = []&&boards && Object.values(boards)\n    const {theme} = props.boards\n    if (theme===\"dark\"){\n        document.body.classList.remove('light')\n        document.body.classList.add('dark')\n    } else if(theme===\"light\"){\n        document.body.classList.remove('dark')\n        document.body.classList.add('light')\n    } \n    const handleInputChange =(event)=>{\n        const target = event.target;\n        target.checked ? props.changeTheme('light') : props.changeTheme('dark');\n    }\n        return (\n            <div className=\"home-page\">\n                <div className=\"home-page__header\">\n                    <div className=\"logo\">\n                        <Link to={{pathname: `/itask/`}} >\n                            <svg width=\"86\" height=\"42\" viewBox=\"0 0 86 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M70.1934 27.6471L72.3203 29.6862L79 29.6862L79 32.9382L52 32.9382L52 29.6862L68.3301 29.6862L66.2383 27.946L59.9805 22.0221L59.9805 18.0671L67.9258 25.4675L79 17.2057L79 21.0202L70.1934 27.6471Z\" fill=\"url(#paint0_linear)\"/>\n                            <path d=\"M20.6543 10.1836H12.4277V33H9.07031V10.1836H0.861328V7.40625H20.6543V10.1836ZM33.6797 33C33.4922 32.625 33.3398 31.957 33.2227 30.9961C31.7109 32.5664 29.9062 33.3516 27.8086 33.3516C25.9336 33.3516 24.3926 32.8242 23.1855 31.7695C21.9902 30.7031 21.3926 29.3555 21.3926 27.7266C21.3926 25.7461 22.1426 24.2109 23.6426 23.1211C25.1543 22.0195 27.2754 21.4688 30.0059 21.4688H33.1699V19.9746C33.1699 18.8379 32.8301 17.9355 32.1504 17.2676C31.4707 16.5879 30.4688 16.248 29.1445 16.248C27.9844 16.248 27.0117 16.541 26.2266 17.127C25.4414 17.7129 25.0488 18.4219 25.0488 19.2539H21.7793C21.7793 18.3047 22.1133 17.3906 22.7812 16.5117C23.4609 15.6211 24.375 14.918 25.5234 14.4023C26.6836 13.8867 27.9551 13.6289 29.3379 13.6289C31.5293 13.6289 33.2461 14.1797 34.4883 15.2812C35.7305 16.3711 36.375 17.877 36.4219 19.7988V28.5527C36.4219 30.2988 36.6445 31.6875 37.0898 32.7188V33H33.6797ZM28.2832 30.5215C29.3027 30.5215 30.2695 30.2578 31.1836 29.7305C32.0977 29.2031 32.7598 28.5176 33.1699 27.6738V23.7715H30.6211C26.6367 23.7715 24.6445 24.9375 24.6445 27.2695C24.6445 28.2891 24.9844 29.0859 25.6641 29.6602C26.3438 30.2344 27.2168 30.5215 28.2832 30.5215ZM52.5938 27.9551C52.5938 27.0762 52.2598 26.3965 51.5918 25.916C50.9355 25.4238 49.7812 25.002 48.1289 24.6504C46.4883 24.2988 45.1816 23.877 44.209 23.3848C43.248 22.8926 42.5332 22.3066 42.0645 21.627C41.6074 20.9473 41.3789 20.1387 41.3789 19.2012C41.3789 17.6426 42.0352 16.3242 43.3477 15.2461C44.6719 14.168 46.3594 13.6289 48.4102 13.6289C50.5664 13.6289 52.3125 14.1855 53.6484 15.2988C54.9961 16.4121 55.6699 17.8359 55.6699 19.5703H52.4004C52.4004 18.6797 52.0195 17.9121 51.2578 17.2676C50.5078 16.623 49.5586 16.3008 48.4102 16.3008C47.2266 16.3008 46.3008 16.5586 45.6328 17.0742C44.9648 17.5898 44.6309 18.2637 44.6309 19.0957C44.6309 19.8809 44.9414 20.4727 45.5625 20.8711C46.1836 21.2695 47.3027 21.6504 48.9199 22.0137C50.5488 22.377 51.8672 22.8105 52.875 23.3145C53.8828 23.8184 54.627 24.4277 55.1074 25.1426C55.5996 25.8457 55.8457 26.707 55.8457 27.7266C55.8457 29.4258 55.166 30.791 53.8066 31.8223C52.4473 32.8418 50.6836 33.3516 48.5156 33.3516C46.9922 33.3516 45.6445 33.082 44.4727 32.543C43.3008 32.0039 42.3809 31.2539 41.7129 30.293C41.0566 29.3203 40.7285 28.2715 40.7285 27.1465H43.9805C44.0391 28.2363 44.4727 29.1035 45.2812 29.748C46.1016 30.3809 47.1797 30.6973 48.5156 30.6973C49.7461 30.6973 50.7305 30.4512 51.4688 29.959C52.2188 29.4551 52.5938 28.7871 52.5938 27.9551Z\" fill=\"white\"/>\n                            <defs>\n                                <linearGradient id=\"paint0_linear\" x1=\"66.5417\" y1=\"40.375\" x2=\"66.5417\" y2=\"17.7083\" gradientUnits=\"userSpaceOnUse\">\n                                    <stop stopColor=\"white\"/>\n                                    <stop offset=\"0.435367\" stopColor=\"white\"/>\n                                    <stop offset=\"0.536458\" stopColor=\"#00FF47\"/>\n                                    <stop offset=\"0.552586\" stopColor=\"#00FF47\"/>\n                                    <stop offset=\"1\" stopColor=\"#00FF47\"/>\n                                </linearGradient>\n                            </defs>\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"header__change-theme change-theme\">\n                        <label className=\"change-theme__switch\">\n                            <input\n                            name=\"isGoing\"\n                            type=\"checkbox\"\n                            onChange={handleInputChange} \n                            checked={theme===\"light\"?true:false}\n                            className=\"change-theme__input\"/>\n                            <span className=\"change-theme__toggle toggle-round\"></span>\n                        </label>\n                    </div>\n                </div>\n                <div className=\"home-page__boards \">\n                    {console.log(boardsArr)}\n                    {!boardsArr.length\n                    ?\n                    <p className=\"home-page__text home-page__text_center\">\"Вы еще не создали ни одну доску, время это сделать!\" </p>\n                    :\n                    <>\n                    <p className=\"home-page__text\">Ваши доски: </p>\n                     {boardsArr.map((board,idx)=>{\n                            return (   \n                                <Link \n                                    to={{\n                                        pathname: `/itask/boards/${board.id}`,\n                                        board,\n                                    }} key={idx}\n                                    className=\"home-page__board\">\n                                    <div className=\"boards__item \" key={idx}>\n                                        <button className=\"board__btn board__btn-remove btn-remove btn\" onClick={()=> props.removeBoard(board.id)}>\n                                            <FontAwesomeIcon icon={faTrashAlt} />\n                                        </button>\n                                        <div className=\"topic-boards_mini\">\n                                            <p>{board.topicBoard}</p>\n                                        </div>\n                                        <div className=\"title-boards_mini\">\n                                            <p>{board.titleBoard}</p>\n                                        </div>\n\n                                    </div>\n                                </Link> \n                            )\n                        })}\n                    </>\n                    }\n                </div>\n                <div className=\"home-page__add-board\">\n                    <AddBoard />\n                </div> \n            </div>\n        );\n}\nconst mapStateToProps = (state) =>({\n    ...state\n})\nconst mapDispatchToProps = dispatch =>({\n    changeTheme: theme => dispatch(changeTheme(theme)),\n    removeBoard: board => dispatch(removeBoard(board)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(HomePage)\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {uuid} from \"uuidv4\";\n\nconst initialState ={\n    status: \"\",\n    theme: \"dark\",\n    boards: {\n\n    },\n}\n\n\nexport default (state=initialState, action)=>{\n    switch(action.type){\n        case 'ADD_BOARD':\n            if (!action.payload.titleBoard)  return {...state,status: \"Введите название доски\"}\n            else if (!action.payload.topicBoard)  return {...state,status: \"Введите тему доски\"}\n            else {\n                const id=uuid()\n\n                const board = {\n                    id,\n                    ...action.payload,\n                    lists: [],\n                }\n\n                state.boards[id] = board\n                return {\n                    ...state,\n                }\n            }\n        case \"ADD_LIST\":\n                if (!action.payload.titleList)  return {...state,status: \"Введите название списка\"}\n                \n                else {\n\n                    \n                    const {idBoard,idList} = action.payload\n                    const board = state.boards[idBoard]\n\n                    const newLists = [...board.lists, idList]\n\n                    board.lists = newLists\n                    \n                   \n                    return {\n                        ...state,\n                        boards: {\n                            ...state.boards,\n                            [idBoard] : board\n                        }\n                    }\n                }\n        case 'REMOVE_BOARD':\n                delete state.boards[action.payload]\n                return {\n                    ...state,\n                }\n        case 'REMOVE_LIST':\n                const {idBoard,idList} = action.payload\n                const idLists = state.boards[idBoard].lists\n                const idxIdList = idLists.indexOf(idList)\n                idLists.splice(idxIdList, 1)\n                return {\n                    ...state,\n                }\n        case 'DRAG_EVENT': {\n            const { idBoard } = action.payload;\n            const board = state.boards[idBoard];\n            const lists = board.lists;\n            const {\n                droppableIndexEnd,\n                droppableIndexStart,\n                type\n            } = action.payload;\n           \n            // draggin lists around\n            if (type === \"list\") {\n                const pulledOutList = lists.splice(droppableIndexStart, 1);\n                lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n                board.lists = lists;\n                return { \n                    ...state, \n                    boards:{\n                        ...state.boards,\n                        [idBoard]: board\n                    }\n                    \n                };\n            }\n        }\n        case 'CHANGE_THEME':\n                return {\n                    ...state,\n                    theme: action.payload\n                }\n        default: \n            return state\n    }\n}\n\n","const initialState ={\n    status: \"\",\n    lists: {\n\n    },\n}\n\nexport default (state=initialState, action)=>{\n    switch(action.type){\n        case 'ADD_LIST':\n            if (!action.payload.titleList)  return {...state,status: \"Введите название доски\"}\n            else {\n                const list = {\n                    ...action.payload,\n                }\n                state.lists[action.payload.idList] =list\n                return {\n                    ...state,\n                }\n            }\n        case 'EDIT_LIST': \n            action.payload.editedTitleList&& (state.lists[action.payload.idList].titleList = action.payload.editedTitleList)\n            return{\n                ...state,\n            }\n        case 'FILTER_LIST': \n            return{\n                ...state,\n            }\n        case 'ADD_CARD':\n            if (!action.payload.textCard)  return {...state,status: \"Введите задачу\"}\n            else {\n                const {idList,idCard} = action.payload\n\n                    const list = state.lists[idList]\n                    const newCards = [...list.cards, idCard]\n                    list.cards = newCards\n                    \n                    return {\n                        ...state,\n                        lists: {\n                            ...state.lists,\n                            [idList] : list\n                        }\n                    }\n            }\n            case 'REMOVE_BOARD':\n                \n                for (const listKey in state.lists){\n                    if (state.lists[listKey].idBoard === action.payload){\n                        delete state.lists[listKey]\n                    }\n                }\n                return {\n                    ...state\n                }\n            case 'REMOVE_LIST':\n                const {idList} = action.payload\n                delete state.lists[idList]\n                return {\n                    ...state\n                }\n            case 'REMOVE_CARD':\n                const {idList: idListForCards,idCard} = action.payload\n                const cards = state.lists[idListForCards].cards\n                const idxIdCard = cards.indexOf(idCard)\n                cards.splice(idxIdCard,1)\n                return {\n                    ...state\n                }\n            case 'DRAG_EVENT':\n                const{\n                    droppableIdStart,\n                    droppableIdEnd,\n                    droppableIndexStart,\n                    droppableIndexEnd,\n                    draggableId,\n                    type\n                } = action.payload\n\n                if (type === \"list\") {\n                    return state;\n                  }\n                else if(droppableIdStart===droppableIdEnd){\n                    const list = state.lists[droppableIdStart]\n                    const card = list.cards.splice(droppableIndexStart, 1)\n                    list.cards.splice(droppableIndexEnd,0, ...card)\n                    return {\n                        ...state,\n                        lists: {\n                            ...state.lists,\n                            [droppableIdStart]: list\n                        }\n                    }\n                }\n                else if (droppableIdStart !== droppableIdEnd) {\n                    const listStart = state.lists[droppableIdStart];\n                    const card = listStart.cards.splice(droppableIndexStart, 1);\n                    const listEnd = state.lists[droppableIdEnd];\n                    listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n                    return {\n                        ...state,\n                        lists: {\n                            ...state.lists,\n                            [droppableIdStart]: listStart,\n                            [droppableIdEnd]: listEnd\n                        }\n                    }\n                  }\n                \n        default: \n            return state\n    }\n}\n\n","const initialState ={\n    status: \"\",\n    cards: {\n\n    },\n}\n\n\nexport default (state=initialState, action)=>{\n    switch(action.type){\n        case 'ADD_CARD':\n            if (!action.payload.textCard)  return {...state,status: \"Введите название доски\"}\n            else {\n                const card = {\n                    ...action.payload,\n                }\n                state.cards[action.payload.idCard] = card\n                return {\n                    ...state,\n                }\n            }\n        case 'EDIT_CARD': \n            action.payload.editedText&& (state.cards[action.payload.idCard].textCard = action.payload.editedText)\n            state.cards[action.payload.idCard].cardPriority = action.payload.editedPriority\n            return{\n                ...state,\n            }\n        case 'DONE_CARD': \n            state.cards[action.payload].doneCard= !state.cards[action.payload].doneCard\n            return{\n                ...state,\n            }\n            \n        case 'REMOVE_BOARD':\n            for (const cardKey in state.cards){\n                if (state.cards[cardKey].idBoard === action.payload){\n                    delete state.cards[cardKey]\n                }\n            }\n            return {\n                ...state\n            }\n        case 'REMOVE_LIST':\n            const {cards: listCards} = action.payload\n            const {cards} = state\n            listCards.forEach((listCard)=>{\n                delete cards[listCard]\n            })\n            return {\n                ...state\n            }\n        case 'REMOVE_CARD':\n            const {idCard} = action.payload\n            delete state.cards[idCard]\n            return {\n                ...state\n            }\n        \n        default: \n            return state\n    }\n}\n\n","import {combineReducers} from 'redux';\n\nimport boards from './boards'\nimport lists from './lists'\nimport cards from './cards'\n\nexport default combineReducers({\n    boards,\n    lists,\n    cards\n})\n","import { createStore } from \"redux\";\n//mport logger from 'redux-logger'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport rootReducer from '../reducers'\n\nconst persistConfig = {\n    key: \"root\",\n    storage\n  };\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport createStore from './store/store';\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = createStore();\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>\n    ,document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\n\nimport React from \"react\";\nimport Board from './components/Board/Board'\n\nimport HomePage from './pages/HomePage/HomePage'\nimport { BrowserRouter as Router, Route,Switch} from \"react-router-dom\";\n\nimport './styles/style.sass';\nexport default function App (){\n    \n        return (\n            <Router>\n                <div className=\"app-container\">\n                    <Switch>\n                        <Route  exact path=\"/itask/\" component={HomePage} />\n                        <Route  exact path=\"/itask/boards/:board\" component={Board} />\n                    </Switch>\n                    <div className=\"window-overlay\" id=\"window-overlay\">\n\n                    </div>\n                </div>\n            </Router>\n        );\n}\n\n\n","module.exports = __webpack_public_path__ + \"static/media/board-error.d90f7e6f.gif\";"],"sourceRoot":""}